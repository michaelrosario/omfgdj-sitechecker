{"version":3,"sources":["components/Badge/index.js","badges/MetaTags/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Badge","props","showStyle","show","display","badgeType","score","a","createElement","className","style","src","icon","alt","name","width","height","description","r","__webpack_exports__","_components_Badge__WEBPACK_IMPORTED_MODULE_1__","MetaTags","siteData","Object","keys","length","constructor","meta","some","item","console","log","badge","badge_name","updateScore","badge_score","_id","badge_icon","badge_description"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,IAAAA,EAAA,KA6BeG,IAzBD,SAACC,GAEb,IAAIC,EAAYD,EAAME,KAAO,CAAEC,QAAS,SAAW,CAAEA,QAAS,QAC1DC,EAAY,GASlB,OAPIA,EADCJ,EAAMK,MAAQ,EACH,uBACJL,EAAMK,MAAQ,EACV,uBAEA,sBAIZR,EAAAS,EAAAC,cAAA,OAAKC,UAAWJ,EAAWK,MAAOR,GAChCJ,EAAAS,EAAAC,cAAA,QAAMC,UAAU,cAAaX,EAAAS,EAAAC,cAAA,OAC3BG,IAAKV,EAAMW,KACXC,IAAKZ,EAAMa,KACXC,MAAO,IAAKC,OAAQ,OAEtBlB,EAAAS,EAAAC,cAAA,UAAKP,EAAMa,MACXhB,EAAAS,EAAAC,cAAA,SAAIP,EAAMgB,uECxBhBpB,EAAAqB,EAAAC,GAAA,IAAAvB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAwB,EAAAvB,EAAA,KA0BewB,UAvBE,SAACpB,GAEhB,IAAIqB,EAAWrB,EAAMqB,UAAY,GAC7BpB,GAAY,EAWlB,OATsC,IAAjCqB,OAAOC,KAAKF,GAAUG,QAAgBH,EAASI,cAAgBH,QAAUD,EAASK,KAAKF,QACrFH,EAASK,KAAKC,KAAK,SAAAC,GAAI,MAAkB,gBAAdA,EAAKf,SACjCgB,QAAQC,IAAI9B,EAAM+B,MAAMC,WAAa,UAErChC,EAAMiC,YAAYjC,EAAM+B,MAAMG,YAAYlC,EAAM+B,MAAMI,KACtDlC,GAAY,GAIXJ,EAAAS,EAAAC,cAACY,EAAA,EAAD,CACGjB,KAAMD,EACNY,KAAMb,EAAM+B,MAAMC,WAClBrB,KAAM,wBAAwBX,EAAM+B,MAAMK,WAC1CpB,YAAahB,EAAM+B,MAAMM,kBACzBhC,MAAOL,EAAM+B,MAAMG","file":"static/js/13.7cc8dfb3.chunk.js","sourcesContent":["import React from \"react\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport './style.css';\n\nconst Badge = (props) => {\n\n  let showStyle = props.show ? { display: \"block\"} : { display: \"none\" };\n  let badgeType = \"\";\n  if(props.score > 0){\n    badgeType = \"score-badge positive\";\n  } else if(props.score < 0){\n    badgeType = \"score-badge negative\";\n  } else {\n    badgeType = \"score-badge neutral\";\n  }\n\nreturn (\n    <div className={badgeType} style={showStyle}>\n      <span className=\"score-icon\"><img \n        src={props.icon} \n        alt={props.name} \n        width={100} height={100} />\n      </span>\n      <h3>{props.name}</h3>\n      <p>{props.description}</p>\n    </div>\n  );\n}\n\nexport default Badge;","import React from \"react\";\nimport Badge from \"../../components/Badge\";\n\nconst MetaTags = (props) => {\n\n  let siteData = props.siteData || {};\n  let showStyle = false;\n  \n  if(Object.keys(siteData).length !== 0 && siteData.constructor === Object && siteData.meta.length) {\n    if(siteData.meta.some(item => item.name === \"description\")){\n      console.log(props.badge.badge_name + \" FOUND\");\n      // run only once\n      props.updateScore(props.badge.badge_score,props.badge._id);\n      showStyle = true;\n    }\n  } \n\nreturn <Badge \n          show={showStyle} \n          name={props.badge.badge_name}\n          icon={\"/assets/images/icons/\"+props.badge.badge_icon}\n          description={props.badge.badge_description}\n          score={props.badge.badge_score}\n        />;\n}\n\nexport default MetaTags;"],"sourceRoot":""}